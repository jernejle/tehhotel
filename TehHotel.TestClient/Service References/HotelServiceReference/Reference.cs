//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TehHotel.TestClient.HotelServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Hotel", Namespace="http//www.tehhotel.com/")]
    [System.SerializableAttribute()]
    public partial class Hotel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BazenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TehHotel.TestClient.HotelServiceReference.Dvorana[] DvoraneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KuhinjaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TehHotel.TestClient.HotelServiceReference.Naslov NaslovField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TehHotel.TestClient.HotelServiceReference.Zaposleni[] OsebjeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TehHotel.TestClient.HotelServiceReference.Parkirisce[] ParkiriscaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TehHotel.TestClient.HotelServiceReference.Soba[] SobeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZvezdiceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Bazen {
            get {
                return this.BazenField;
            }
            set {
                if ((this.BazenField.Equals(value) != true)) {
                    this.BazenField = value;
                    this.RaisePropertyChanged("Bazen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TehHotel.TestClient.HotelServiceReference.Dvorana[] Dvorane {
            get {
                return this.DvoraneField;
            }
            set {
                if ((object.ReferenceEquals(this.DvoraneField, value) != true)) {
                    this.DvoraneField = value;
                    this.RaisePropertyChanged("Dvorane");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ime {
            get {
                return this.ImeField;
            }
            set {
                if ((object.ReferenceEquals(this.ImeField, value) != true)) {
                    this.ImeField = value;
                    this.RaisePropertyChanged("Ime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Kuhinja {
            get {
                return this.KuhinjaField;
            }
            set {
                if ((this.KuhinjaField.Equals(value) != true)) {
                    this.KuhinjaField = value;
                    this.RaisePropertyChanged("Kuhinja");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TehHotel.TestClient.HotelServiceReference.Naslov Naslov {
            get {
                return this.NaslovField;
            }
            set {
                if ((object.ReferenceEquals(this.NaslovField, value) != true)) {
                    this.NaslovField = value;
                    this.RaisePropertyChanged("Naslov");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TehHotel.TestClient.HotelServiceReference.Zaposleni[] Osebje {
            get {
                return this.OsebjeField;
            }
            set {
                if ((object.ReferenceEquals(this.OsebjeField, value) != true)) {
                    this.OsebjeField = value;
                    this.RaisePropertyChanged("Osebje");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TehHotel.TestClient.HotelServiceReference.Parkirisce[] Parkirisca {
            get {
                return this.ParkiriscaField;
            }
            set {
                if ((object.ReferenceEquals(this.ParkiriscaField, value) != true)) {
                    this.ParkiriscaField = value;
                    this.RaisePropertyChanged("Parkirisca");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TehHotel.TestClient.HotelServiceReference.Soba[] Sobe {
            get {
                return this.SobeField;
            }
            set {
                if ((object.ReferenceEquals(this.SobeField, value) != true)) {
                    this.SobeField = value;
                    this.RaisePropertyChanged("Sobe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Zvezdice {
            get {
                return this.ZvezdiceField;
            }
            set {
                if ((this.ZvezdiceField.Equals(value) != true)) {
                    this.ZvezdiceField = value;
                    this.RaisePropertyChanged("Zvezdice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Naslov", Namespace="http//www.tehhotel.com/")]
    [System.SerializableAttribute()]
    public partial class Naslov : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrzavaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KrajField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostnaStevilkaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UlicaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Drzava {
            get {
                return this.DrzavaField;
            }
            set {
                if ((object.ReferenceEquals(this.DrzavaField, value) != true)) {
                    this.DrzavaField = value;
                    this.RaisePropertyChanged("Drzava");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kraj {
            get {
                return this.KrajField;
            }
            set {
                if ((object.ReferenceEquals(this.KrajField, value) != true)) {
                    this.KrajField = value;
                    this.RaisePropertyChanged("Kraj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostnaStevilka {
            get {
                return this.PostnaStevilkaField;
            }
            set {
                if ((this.PostnaStevilkaField.Equals(value) != true)) {
                    this.PostnaStevilkaField = value;
                    this.RaisePropertyChanged("PostnaStevilka");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ulica {
            get {
                return this.UlicaField;
            }
            set {
                if ((object.ReferenceEquals(this.UlicaField, value) != true)) {
                    this.UlicaField = value;
                    this.RaisePropertyChanged("Ulica");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dvorana", Namespace="http//www.tehhotel.com/", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Dvorana : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HotelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PovrsinaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StLjudiField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HotelId {
            get {
                return this.HotelIdField;
            }
            set {
                if ((this.HotelIdField.Equals(value) != true)) {
                    this.HotelIdField = value;
                    this.RaisePropertyChanged("HotelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ime {
            get {
                return this.ImeField;
            }
            set {
                if ((object.ReferenceEquals(this.ImeField, value) != true)) {
                    this.ImeField = value;
                    this.RaisePropertyChanged("Ime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Povrsina {
            get {
                return this.PovrsinaField;
            }
            set {
                if ((this.PovrsinaField.Equals(value) != true)) {
                    this.PovrsinaField = value;
                    this.RaisePropertyChanged("Povrsina");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StLjudi {
            get {
                return this.StLjudiField;
            }
            set {
                if ((this.StLjudiField.Equals(value) != true)) {
                    this.StLjudiField = value;
                    this.RaisePropertyChanged("StLjudi");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Zaposleni", Namespace="http//www.tehhotel.com/")]
    [System.SerializableAttribute()]
    public partial class Zaposleni : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DatumRojstvaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DatumZaposlitveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HotelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TehHotel.TestClient.HotelServiceReference.Identifikacija IdentifikacijaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IzobrazbaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TehHotel.TestClient.HotelServiceReference.Naslov NaslovField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriimekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TelefonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VlogaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DatumRojstva {
            get {
                return this.DatumRojstvaField;
            }
            set {
                if ((this.DatumRojstvaField.Equals(value) != true)) {
                    this.DatumRojstvaField = value;
                    this.RaisePropertyChanged("DatumRojstva");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DatumZaposlitve {
            get {
                return this.DatumZaposlitveField;
            }
            set {
                if ((this.DatumZaposlitveField.Equals(value) != true)) {
                    this.DatumZaposlitveField = value;
                    this.RaisePropertyChanged("DatumZaposlitve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HotelId {
            get {
                return this.HotelIdField;
            }
            set {
                if ((this.HotelIdField.Equals(value) != true)) {
                    this.HotelIdField = value;
                    this.RaisePropertyChanged("HotelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TehHotel.TestClient.HotelServiceReference.Identifikacija Identifikacija {
            get {
                return this.IdentifikacijaField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifikacijaField, value) != true)) {
                    this.IdentifikacijaField = value;
                    this.RaisePropertyChanged("Identifikacija");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ime {
            get {
                return this.ImeField;
            }
            set {
                if ((object.ReferenceEquals(this.ImeField, value) != true)) {
                    this.ImeField = value;
                    this.RaisePropertyChanged("Ime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Izobrazba {
            get {
                return this.IzobrazbaField;
            }
            set {
                if ((object.ReferenceEquals(this.IzobrazbaField, value) != true)) {
                    this.IzobrazbaField = value;
                    this.RaisePropertyChanged("Izobrazba");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TehHotel.TestClient.HotelServiceReference.Naslov Naslov {
            get {
                return this.NaslovField;
            }
            set {
                if ((object.ReferenceEquals(this.NaslovField, value) != true)) {
                    this.NaslovField = value;
                    this.RaisePropertyChanged("Naslov");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priimek {
            get {
                return this.PriimekField;
            }
            set {
                if ((object.ReferenceEquals(this.PriimekField, value) != true)) {
                    this.PriimekField = value;
                    this.RaisePropertyChanged("Priimek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Spol {
            get {
                return this.SpolField;
            }
            set {
                if ((object.ReferenceEquals(this.SpolField, value) != true)) {
                    this.SpolField = value;
                    this.RaisePropertyChanged("Spol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Telefon {
            get {
                return this.TelefonField;
            }
            set {
                if ((this.TelefonField.Equals(value) != true)) {
                    this.TelefonField = value;
                    this.RaisePropertyChanged("Telefon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vloga {
            get {
                return this.VlogaField;
            }
            set {
                if ((object.ReferenceEquals(this.VlogaField, value) != true)) {
                    this.VlogaField = value;
                    this.RaisePropertyChanged("Vloga");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Parkirisce", Namespace="http//www.tehhotel.com/")]
    [System.SerializableAttribute()]
    public partial class Parkirisce : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HotelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PokritoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StevilkaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HotelId {
            get {
                return this.HotelIdField;
            }
            set {
                if ((this.HotelIdField.Equals(value) != true)) {
                    this.HotelIdField = value;
                    this.RaisePropertyChanged("HotelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Pokrito {
            get {
                return this.PokritoField;
            }
            set {
                if ((this.PokritoField.Equals(value) != true)) {
                    this.PokritoField = value;
                    this.RaisePropertyChanged("Pokrito");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stevilka {
            get {
                return this.StevilkaField;
            }
            set {
                if ((object.ReferenceEquals(this.StevilkaField, value) != true)) {
                    this.StevilkaField = value;
                    this.RaisePropertyChanged("Stevilka");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Soba", Namespace="http//www.tehhotel.com/")]
    [System.SerializableAttribute()]
    public partial class Soba : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BalkonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CenaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HladilnikField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HotelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InternetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NadstropjeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StPosteljField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StevilkaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TelevizijaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValutaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Balkon {
            get {
                return this.BalkonField;
            }
            set {
                if ((this.BalkonField.Equals(value) != true)) {
                    this.BalkonField = value;
                    this.RaisePropertyChanged("Balkon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Cena {
            get {
                return this.CenaField;
            }
            set {
                if ((this.CenaField.Equals(value) != true)) {
                    this.CenaField = value;
                    this.RaisePropertyChanged("Cena");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hladilnik {
            get {
                return this.HladilnikField;
            }
            set {
                if ((this.HladilnikField.Equals(value) != true)) {
                    this.HladilnikField = value;
                    this.RaisePropertyChanged("Hladilnik");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HotelId {
            get {
                return this.HotelIdField;
            }
            set {
                if ((this.HotelIdField.Equals(value) != true)) {
                    this.HotelIdField = value;
                    this.RaisePropertyChanged("HotelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Internet {
            get {
                return this.InternetField;
            }
            set {
                if ((this.InternetField.Equals(value) != true)) {
                    this.InternetField = value;
                    this.RaisePropertyChanged("Internet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Nadstropje {
            get {
                return this.NadstropjeField;
            }
            set {
                if ((this.NadstropjeField.Equals(value) != true)) {
                    this.NadstropjeField = value;
                    this.RaisePropertyChanged("Nadstropje");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StPostelj {
            get {
                return this.StPosteljField;
            }
            set {
                if ((this.StPosteljField.Equals(value) != true)) {
                    this.StPosteljField = value;
                    this.RaisePropertyChanged("StPostelj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stevilka {
            get {
                return this.StevilkaField;
            }
            set {
                if ((this.StevilkaField.Equals(value) != true)) {
                    this.StevilkaField = value;
                    this.RaisePropertyChanged("Stevilka");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Televizija {
            get {
                return this.TelevizijaField;
            }
            set {
                if ((this.TelevizijaField.Equals(value) != true)) {
                    this.TelevizijaField = value;
                    this.RaisePropertyChanged("Televizija");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Valuta {
            get {
                return this.ValutaField;
            }
            set {
                if ((object.ReferenceEquals(this.ValutaField, value) != true)) {
                    this.ValutaField = value;
                    this.RaisePropertyChanged("Valuta");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Identifikacija", Namespace="http//www.tehhotel.com/")]
    [System.SerializableAttribute()]
    public partial class Identifikacija : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VrednostField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tip {
            get {
                return this.TipField;
            }
            set {
                if ((object.ReferenceEquals(this.TipField, value) != true)) {
                    this.TipField = value;
                    this.RaisePropertyChanged("Tip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vrednost {
            get {
                return this.VrednostField;
            }
            set {
                if ((object.ReferenceEquals(this.VrednostField, value) != true)) {
                    this.VrednostField = value;
                    this.RaisePropertyChanged("Vrednost");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http//www.tehhotel.com/", ConfigurationName="HotelServiceReference.HotelService")]
    public interface HotelService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/CreateHotel", ReplyAction="http//www.tehhotel.com/HotelService/CreateHotelResponse")]
        bool CreateHotel(TehHotel.TestClient.HotelServiceReference.Hotel h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/CreateHotel", ReplyAction="http//www.tehhotel.com/HotelService/CreateHotelResponse")]
        System.Threading.Tasks.Task<bool> CreateHotelAsync(TehHotel.TestClient.HotelServiceReference.Hotel h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/ReadHotel", ReplyAction="http//www.tehhotel.com/HotelService/ReadHotelResponse")]
        TehHotel.TestClient.HotelServiceReference.Hotel ReadHotel(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/ReadHotel", ReplyAction="http//www.tehhotel.com/HotelService/ReadHotelResponse")]
        System.Threading.Tasks.Task<TehHotel.TestClient.HotelServiceReference.Hotel> ReadHotelAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/UpdateHotel", ReplyAction="http//www.tehhotel.com/HotelService/UpdateHotelResponse")]
        bool UpdateHotel(TehHotel.TestClient.HotelServiceReference.Hotel h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/UpdateHotel", ReplyAction="http//www.tehhotel.com/HotelService/UpdateHotelResponse")]
        System.Threading.Tasks.Task<bool> UpdateHotelAsync(TehHotel.TestClient.HotelServiceReference.Hotel h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/DeleteHotel", ReplyAction="http//www.tehhotel.com/HotelService/DeleteHotelResponse")]
        bool DeleteHotel(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/DeleteHotel", ReplyAction="http//www.tehhotel.com/HotelService/DeleteHotelResponse")]
        System.Threading.Tasks.Task<bool> DeleteHotelAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/ListHotel", ReplyAction="http//www.tehhotel.com/HotelService/ListHotelResponse")]
        TehHotel.TestClient.HotelServiceReference.Hotel[] ListHotel();
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/ListHotel", ReplyAction="http//www.tehhotel.com/HotelService/ListHotelResponse")]
        System.Threading.Tasks.Task<TehHotel.TestClient.HotelServiceReference.Hotel[]> ListHotelAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/ListHotelByKraj", ReplyAction="http//www.tehhotel.com/HotelService/ListHotelByKrajResponse")]
        TehHotel.TestClient.HotelServiceReference.Hotel[] ListHotelByKraj(string kraj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/ListHotelByKraj", ReplyAction="http//www.tehhotel.com/HotelService/ListHotelByKrajResponse")]
        System.Threading.Tasks.Task<TehHotel.TestClient.HotelServiceReference.Hotel[]> ListHotelByKrajAsync(string kraj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/ListHotelByDrzava", ReplyAction="http//www.tehhotel.com/HotelService/ListHotelByDrzavaResponse")]
        TehHotel.TestClient.HotelServiceReference.Hotel[] ListHotelByDrzava(string drzava);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/ListHotelByDrzava", ReplyAction="http//www.tehhotel.com/HotelService/ListHotelByDrzavaResponse")]
        System.Threading.Tasks.Task<TehHotel.TestClient.HotelServiceReference.Hotel[]> ListHotelByDrzavaAsync(string drzava);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/AddSoba", ReplyAction="http//www.tehhotel.com/HotelService/AddSobaResponse")]
        bool AddSoba(int hotelId, TehHotel.TestClient.HotelServiceReference.Soba s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/AddSoba", ReplyAction="http//www.tehhotel.com/HotelService/AddSobaResponse")]
        System.Threading.Tasks.Task<bool> AddSobaAsync(int hotelId, TehHotel.TestClient.HotelServiceReference.Soba s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/RemoveSoba", ReplyAction="http//www.tehhotel.com/HotelService/RemoveSobaResponse")]
        bool RemoveSoba(int hotelId, int sobaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/RemoveSoba", ReplyAction="http//www.tehhotel.com/HotelService/RemoveSobaResponse")]
        System.Threading.Tasks.Task<bool> RemoveSobaAsync(int hotelId, int sobaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/AddDvorana", ReplyAction="http//www.tehhotel.com/HotelService/AddDvoranaResponse")]
        bool AddDvorana(int hotelId, TehHotel.TestClient.HotelServiceReference.Dvorana d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/AddDvorana", ReplyAction="http//www.tehhotel.com/HotelService/AddDvoranaResponse")]
        System.Threading.Tasks.Task<bool> AddDvoranaAsync(int hotelId, TehHotel.TestClient.HotelServiceReference.Dvorana d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/RemoveDvorana", ReplyAction="http//www.tehhotel.com/HotelService/RemoveDvoranaResponse")]
        bool RemoveDvorana(int hotelId, int dvoranaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/RemoveDvorana", ReplyAction="http//www.tehhotel.com/HotelService/RemoveDvoranaResponse")]
        System.Threading.Tasks.Task<bool> RemoveDvoranaAsync(int hotelId, int dvoranaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/AddParkirisce", ReplyAction="http//www.tehhotel.com/HotelService/AddParkirisceResponse")]
        bool AddParkirisce(int hotelId, TehHotel.TestClient.HotelServiceReference.Parkirisce p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/AddParkirisce", ReplyAction="http//www.tehhotel.com/HotelService/AddParkirisceResponse")]
        System.Threading.Tasks.Task<bool> AddParkirisceAsync(int hotelId, TehHotel.TestClient.HotelServiceReference.Parkirisce p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/RemoveParkirisce", ReplyAction="http//www.tehhotel.com/HotelService/RemoveParkirisceResponse")]
        bool RemoveParkirisce(int hotelId, int parkirisceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/RemoveParkirisce", ReplyAction="http//www.tehhotel.com/HotelService/RemoveParkirisceResponse")]
        System.Threading.Tasks.Task<bool> RemoveParkirisceAsync(int hotelId, int parkirisceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/CreateZaposleni", ReplyAction="http//www.tehhotel.com/HotelService/CreateZaposleniResponse")]
        bool CreateZaposleni(TehHotel.TestClient.HotelServiceReference.Zaposleni z);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/CreateZaposleni", ReplyAction="http//www.tehhotel.com/HotelService/CreateZaposleniResponse")]
        System.Threading.Tasks.Task<bool> CreateZaposleniAsync(TehHotel.TestClient.HotelServiceReference.Zaposleni z);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/ReadZaposleni", ReplyAction="http//www.tehhotel.com/HotelService/ReadZaposleniResponse")]
        TehHotel.TestClient.HotelServiceReference.Zaposleni ReadZaposleni(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/ReadZaposleni", ReplyAction="http//www.tehhotel.com/HotelService/ReadZaposleniResponse")]
        System.Threading.Tasks.Task<TehHotel.TestClient.HotelServiceReference.Zaposleni> ReadZaposleniAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/UpdateZaposleni", ReplyAction="http//www.tehhotel.com/HotelService/UpdateZaposleniResponse")]
        bool UpdateZaposleni(TehHotel.TestClient.HotelServiceReference.Zaposleni z);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/UpdateZaposleni", ReplyAction="http//www.tehhotel.com/HotelService/UpdateZaposleniResponse")]
        System.Threading.Tasks.Task<bool> UpdateZaposleniAsync(TehHotel.TestClient.HotelServiceReference.Zaposleni z);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/DeleteZaposleni", ReplyAction="http//www.tehhotel.com/HotelService/DeleteZaposleniResponse")]
        bool DeleteZaposleni(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/DeleteZaposleni", ReplyAction="http//www.tehhotel.com/HotelService/DeleteZaposleniResponse")]
        System.Threading.Tasks.Task<bool> DeleteZaposleniAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/ListZaposleni", ReplyAction="http//www.tehhotel.com/HotelService/ListZaposleniResponse")]
        TehHotel.TestClient.HotelServiceReference.Zaposleni[] ListZaposleni();
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/ListZaposleni", ReplyAction="http//www.tehhotel.com/HotelService/ListZaposleniResponse")]
        System.Threading.Tasks.Task<TehHotel.TestClient.HotelServiceReference.Zaposleni[]> ListZaposleniAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/ListZaposleniByHotel", ReplyAction="http//www.tehhotel.com/HotelService/ListZaposleniByHotelResponse")]
        TehHotel.TestClient.HotelServiceReference.Zaposleni[] ListZaposleniByHotel(int hotelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http//www.tehhotel.com/HotelService/ListZaposleniByHotel", ReplyAction="http//www.tehhotel.com/HotelService/ListZaposleniByHotelResponse")]
        System.Threading.Tasks.Task<TehHotel.TestClient.HotelServiceReference.Zaposleni[]> ListZaposleniByHotelAsync(int hotelId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface HotelServiceChannel : TehHotel.TestClient.HotelServiceReference.HotelService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HotelServiceClient : System.ServiceModel.ClientBase<TehHotel.TestClient.HotelServiceReference.HotelService>, TehHotel.TestClient.HotelServiceReference.HotelService {
        
        public HotelServiceClient() {
        }
        
        public HotelServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HotelServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HotelServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HotelServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreateHotel(TehHotel.TestClient.HotelServiceReference.Hotel h) {
            return base.Channel.CreateHotel(h);
        }
        
        public System.Threading.Tasks.Task<bool> CreateHotelAsync(TehHotel.TestClient.HotelServiceReference.Hotel h) {
            return base.Channel.CreateHotelAsync(h);
        }
        
        public TehHotel.TestClient.HotelServiceReference.Hotel ReadHotel(int id) {
            return base.Channel.ReadHotel(id);
        }
        
        public System.Threading.Tasks.Task<TehHotel.TestClient.HotelServiceReference.Hotel> ReadHotelAsync(int id) {
            return base.Channel.ReadHotelAsync(id);
        }
        
        public bool UpdateHotel(TehHotel.TestClient.HotelServiceReference.Hotel h) {
            return base.Channel.UpdateHotel(h);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateHotelAsync(TehHotel.TestClient.HotelServiceReference.Hotel h) {
            return base.Channel.UpdateHotelAsync(h);
        }
        
        public bool DeleteHotel(int id) {
            return base.Channel.DeleteHotel(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteHotelAsync(int id) {
            return base.Channel.DeleteHotelAsync(id);
        }
        
        public TehHotel.TestClient.HotelServiceReference.Hotel[] ListHotel() {
            return base.Channel.ListHotel();
        }
        
        public System.Threading.Tasks.Task<TehHotel.TestClient.HotelServiceReference.Hotel[]> ListHotelAsync() {
            return base.Channel.ListHotelAsync();
        }
        
        public TehHotel.TestClient.HotelServiceReference.Hotel[] ListHotelByKraj(string kraj) {
            return base.Channel.ListHotelByKraj(kraj);
        }
        
        public System.Threading.Tasks.Task<TehHotel.TestClient.HotelServiceReference.Hotel[]> ListHotelByKrajAsync(string kraj) {
            return base.Channel.ListHotelByKrajAsync(kraj);
        }
        
        public TehHotel.TestClient.HotelServiceReference.Hotel[] ListHotelByDrzava(string drzava) {
            return base.Channel.ListHotelByDrzava(drzava);
        }
        
        public System.Threading.Tasks.Task<TehHotel.TestClient.HotelServiceReference.Hotel[]> ListHotelByDrzavaAsync(string drzava) {
            return base.Channel.ListHotelByDrzavaAsync(drzava);
        }
        
        public bool AddSoba(int hotelId, TehHotel.TestClient.HotelServiceReference.Soba s) {
            return base.Channel.AddSoba(hotelId, s);
        }
        
        public System.Threading.Tasks.Task<bool> AddSobaAsync(int hotelId, TehHotel.TestClient.HotelServiceReference.Soba s) {
            return base.Channel.AddSobaAsync(hotelId, s);
        }
        
        public bool RemoveSoba(int hotelId, int sobaId) {
            return base.Channel.RemoveSoba(hotelId, sobaId);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveSobaAsync(int hotelId, int sobaId) {
            return base.Channel.RemoveSobaAsync(hotelId, sobaId);
        }
        
        public bool AddDvorana(int hotelId, TehHotel.TestClient.HotelServiceReference.Dvorana d) {
            return base.Channel.AddDvorana(hotelId, d);
        }
        
        public System.Threading.Tasks.Task<bool> AddDvoranaAsync(int hotelId, TehHotel.TestClient.HotelServiceReference.Dvorana d) {
            return base.Channel.AddDvoranaAsync(hotelId, d);
        }
        
        public bool RemoveDvorana(int hotelId, int dvoranaId) {
            return base.Channel.RemoveDvorana(hotelId, dvoranaId);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveDvoranaAsync(int hotelId, int dvoranaId) {
            return base.Channel.RemoveDvoranaAsync(hotelId, dvoranaId);
        }
        
        public bool AddParkirisce(int hotelId, TehHotel.TestClient.HotelServiceReference.Parkirisce p) {
            return base.Channel.AddParkirisce(hotelId, p);
        }
        
        public System.Threading.Tasks.Task<bool> AddParkirisceAsync(int hotelId, TehHotel.TestClient.HotelServiceReference.Parkirisce p) {
            return base.Channel.AddParkirisceAsync(hotelId, p);
        }
        
        public bool RemoveParkirisce(int hotelId, int parkirisceId) {
            return base.Channel.RemoveParkirisce(hotelId, parkirisceId);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveParkirisceAsync(int hotelId, int parkirisceId) {
            return base.Channel.RemoveParkirisceAsync(hotelId, parkirisceId);
        }
        
        public bool CreateZaposleni(TehHotel.TestClient.HotelServiceReference.Zaposleni z) {
            return base.Channel.CreateZaposleni(z);
        }
        
        public System.Threading.Tasks.Task<bool> CreateZaposleniAsync(TehHotel.TestClient.HotelServiceReference.Zaposleni z) {
            return base.Channel.CreateZaposleniAsync(z);
        }
        
        public TehHotel.TestClient.HotelServiceReference.Zaposleni ReadZaposleni(int id) {
            return base.Channel.ReadZaposleni(id);
        }
        
        public System.Threading.Tasks.Task<TehHotel.TestClient.HotelServiceReference.Zaposleni> ReadZaposleniAsync(int id) {
            return base.Channel.ReadZaposleniAsync(id);
        }
        
        public bool UpdateZaposleni(TehHotel.TestClient.HotelServiceReference.Zaposleni z) {
            return base.Channel.UpdateZaposleni(z);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateZaposleniAsync(TehHotel.TestClient.HotelServiceReference.Zaposleni z) {
            return base.Channel.UpdateZaposleniAsync(z);
        }
        
        public bool DeleteZaposleni(int id) {
            return base.Channel.DeleteZaposleni(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteZaposleniAsync(int id) {
            return base.Channel.DeleteZaposleniAsync(id);
        }
        
        public TehHotel.TestClient.HotelServiceReference.Zaposleni[] ListZaposleni() {
            return base.Channel.ListZaposleni();
        }
        
        public System.Threading.Tasks.Task<TehHotel.TestClient.HotelServiceReference.Zaposleni[]> ListZaposleniAsync() {
            return base.Channel.ListZaposleniAsync();
        }
        
        public TehHotel.TestClient.HotelServiceReference.Zaposleni[] ListZaposleniByHotel(int hotelId) {
            return base.Channel.ListZaposleniByHotel(hotelId);
        }
        
        public System.Threading.Tasks.Task<TehHotel.TestClient.HotelServiceReference.Zaposleni[]> ListZaposleniByHotelAsync(int hotelId) {
            return base.Channel.ListZaposleniByHotelAsync(hotelId);
        }
    }
}
